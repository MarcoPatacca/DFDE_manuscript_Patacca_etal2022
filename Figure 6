#Figure 6 - Decadal average of countries' total damage weighted by forest area (Standardized disturbance index, m3/ha/yr) plotted in the maps. 
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#Libraries
library(tidyverse)
library(ggplot2)
library(lubridate)

#Figure 6
#calculate yearly disturbances per country
disturbance_df %>% 
  select(Year, country, disturbance_driver, Expert_GapFilled_m3 )->disturbance_4_maps

#make NA zeros
disturbance_4_maps[is.na(disturbance_4_maps)] <- 0

#load country forest area
setwd("C:/Users/xxxx") #set your own directory
forest_area <- read_xlsx("Checked_forest_predicting_vars_EU.xlsx", sheet = "data")
forest_area %>% select(Year, country, Forest_Area_1000ha)->forest_area


#merge the two dfs and add decades
disturbance_4_maps %>% 
  group_by(Year, country) %>% 
  mutate(total_disturbance = sum(Expert_GapFilled_m3)) %>% 
  left_join(forest_area, by=c("Year", "country")) %>% 
  mutate( decade = case_when (Year <= 1959 ~ "1950s",
                              Year <= 1969 ~ "1960s",
                              Year <= 1979 ~ "1970s",
                              Year <= 1989 ~ "1980s",
                              Year <= 1999 ~ "1990s",
                              Year <= 2009 ~ "2000s",
                              Year <= 2019 ~ "2010s"))->disturbance_4_maps



#calculate standardized disturbance index 
disturbance_4_maps %>% 
  select(-Year) %>% 
  mutate(`Standardized Disturbance Index` = (total_disturbance)/(Forest_Area_1000ha*1000)) %>% 
  group_by(country, decade) %>% 
  summarise(across(where(is.numeric), ~ mean(.x, na.rm = TRUE))) %>% 
  ungroup() %>% 
  unique() -> disturbance_4_maps

#country rename
disturbance_4_maps %>% 
  select(country,decade, `Standardized Disturbance Index`) %>% 
  spread(., country, `Standardized Disturbance Index`) %>% 
  rename(`Czech Republic` = `Czechia`, `Bosnia and Herzegovina` = `Bosnia & Herzegovina`, `UK` = `United Kingdom`) %>% 
  gather(., country, `Standardized Disturbance Index`, -decade)-> disturbance_4_maps

#MAP with forest cover underneath 
#Figure 1
# Define x and y limits
bbox <- c(left = -12, bottom = 34, right = 45, top = 72)

# Get elevation map
elevation_map <- get_stamenmap(bbox, maptype = "terrain-background", zoom = 5) # You can change the zoom for more or less details

# Get country contours 
my_world_map <- map_data('world')
# To check the country names (in case necessary)
as.character(unique(unlist(my_world_map$region))) 

my_world_map1 <- my_world_map[my_world_map$region %in% c(  "Portugal", "Spain", "France", "Switzerland", "Germany",
                                                           "Austria", "Belgium", "UK", "Netherlands",
                                                           "Denmark", "Poland", "Italy", 
                                                           "Croatia", "Slovenia", "Hungary", "Slovakia",
                                                           "Czech Republic", "Finland", "Sweden", "Norway", "Greece", 
                                                           "Serbia", "Bosnia and Herzegovina", "Ireland",
                                                           "Estonia", "Latvia", "Lithuania", "Albania", "Romania" ,  
                                                           "Bulgaria", "Luxembourg", "North Macedonia", "Turkey"),]
#join to maps df
my_world_map1 %>% 
  left_join(disturbance_4_maps, by = c("region"= "country"))->my_world_map1

# Plot 
ggmap(elevation_map, extent = "device") +
  scale_fill_gradientn(colours = terrain.colors(100)) +
  geom_polygon(data = my_world_map1, 
               aes(x = long, y = lat, group = group, fill = `Standardized Disturbance Index`) ,alpha = 0.75, size=1,  colour = 'black') +
  scale_fill_distiller(palette = "YlOrRd", direction = 2, na.value = NA)+
  facet_wrap(~decade)+
  xlab("Longitude")+
  ylab("Latitude")+
  theme_bw()+
  theme(text = element_text(size = 15),
        legend.position = c(0.5,0.2)) +
  labs( fill = "Standardized disturbance index
(m3/ha/yr)") -> Figure_6

Figure_6
